<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:task="http://www.springframework.org/schema/task"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd 
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.1.xsd
		http://www.springframework.org/schema/util
        http://www.springframework.org/schema/util/spring-util-3.0.xsd"
		>


	
	<!-- 数据库配置第二版 -->
	
	<!-- 加载资源文件  其中包含变量信息，必须在Spring配置文件的最前面加载，即第一个加载-->
	<!-- <context:property-placeholder location="/WEB-INF/jdbc.properties"/> -->
	
	<!-- 与上面的配置等价，下面的更容易理解 -->  
	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">  
	    <property name="locations"> <!-- PropertyPlaceholderConfigurer类中有个locations属性，接收的是一个数组，即我们可以在下面配好多个properties文件 -->  
	        <array>  
	            <value>/WEB-INF/jdbc.properties</value>
	            <value>/WEB-INF/version.properties</value>  
	        </array>  
	    </property>  
	</bean>  
	
	<bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="packagesToScan">
			<list>
				<!-- 可以添加多个包 -->
				<value>mis.li.entity</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
			</props>
		</property>
	
	</bean>
	
	<util:properties id="versionSetting" location="/WEB-INF/version.properties"></util:properties>
	
	<!-- 数据库映射 -->
	<!-- <bean id="dataSource" class="org.lixue.dataSource.DynamicDataSource">
		<property name="targetDataSources">  
		    <map key-type="java.lang.String">  -->
		        <!-- <entry key="basicssh" value-ref="basicsshDataSource" /> -->  
		 <!--       <entry key="obdcar" value-ref="obdcarDataSource" />  
		    </map>  
		</property>  
		<property name="defaultTargetDataSource" ref="obdcarDataSource" />
	</bean>
	 -->
	 
	<bean id="dataSource"
	    class="org.logicalcobwebs.proxool.ProxoolDataSource">
	    <property name="driver">
	        <value>${jdbc.driverClassName_midb001}</value>
	    </property>
	    <property name="driverUrl">
	        <value>${jdbc.url_midb001}</value>
	    </property>
	    <property name="user" value="${jdbc.username_midb001}" />
	    <property name="password" value="${jdbc.password_midb001}" />
	    <property name="alias" value="Pool_dbname" />
	    <property name="houseKeepingSleepTime" value="90000" />
	    <property name="prototypeCount" value="0" />
	    <property name="maximumConnectionCount" value="10" />
	    <property name="minimumConnectionCount" value="2" />
	    <property name="simultaneousBuildThrottle" value="50" />
	    <property name="maximumConnectionLifetime" value="14400000" />
	    <property name="houseKeepingTestSql" value="select CURRENT_DATE" />
	</bean>
	
<!-- 
	<bean id="basicsshDataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="${jdbc.driverClassName_basicssh}" />
		<property name="url" value="${jdbc.url_basicssh}" />
		<property name="username" value="${jdbc.username_basicssh}" />
		<property name="password" value="${jdbc.password_basicssh}" />
	</bean> -->
	
	<bean id="misDataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="${jdbc.driverClassName_midb001}" />
		<property name="url" value="${jdbc.url_midb001}" />
		<property name="username" value="${jdbc.username_midb001}" />
		<property name="password" value="${jdbc.password_midb001}" />
	</bean>

	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">  
        <property name="dataSource" ref="dataSource"></property>  
    </bean> 

	<!-- 配置Hibernate事务管理器 -->
	<bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
      <property name="sessionFactory" ref="sessionFactory" />
   </bean>
	
	<!-- 配置事务异常封装 -->
   <bean id="persistenceExceptionTranslationPostProcessor" 
       class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" />
	
	
	<!--  声明式容器事务管理 ,transaction-manager指定事务管理器为transactionManager -->
    <!-- <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="add*" propagation="REQUIRED" />
            <tx:method name="get*" propagation="REQUIRED" />
            <tx:method name="*" read-only="true" />
        </tx:attributes>
    </tx:advice>

	<aop:config expose-proxy="true">
        只对业务逻辑层实施事务
        <aop:pointcut id="txPointcut" expression="execution(* com.lei.demo.service..*.*(..))" />
        Advisor定义，切入点和通知分别为txPointcut、txAdvice
        <aop:advisor pointcut-ref="txPointcut" advice-ref="txAdvice"/>
    </aop:config>
	 -->

    

</beans>
